{"name": "test_case[param4]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 0 == 400069\n  -0\n  +400069", "trace": "self = <testcases.test_case.TestCases object at 0x000001DE4E08FC18>\nparam = {'excepted_code': 0, 'header': \"{'language':'zh-CN'}\", 'id': 4, 'method': 'post', ...}\n\n    @allure.story('接口测试')\n    def test_case(self,param):\n        with allure.step(param['title']):\n            #将上一个接口的出参传递到下一个接口\n            #传递ticket\n            if  SaveValue.TICKET !='':\n                reg.regular('TICKET',SaveValue.TICKET,param['param'])\n            #传递token到header\n            if  SaveValue.TOKEN !='':\n                reg.regular('TOKEN',SaveValue.TOKEN,param['header'])\n            #发起请求\n            re=Request().httprequest(param['url'],eval(param['param']),param['method'],eval(param['header']))\n            log.info('请求结果为：{0}'.format(re))\n            #保存ticket\n            try:\n                if param['id']==3 and re['code']==0:\n                    SaveValue.TICKET=re['data']['ticket']\n                    log.info('保存的ticket为：{0}'.format(re['data']['ticket']))\n            except Exception as e:\n                log.debug('保存ticket失败：{0}'.format(e))\n                raise e\n            #保存token\n            try:\n                if param['id']==5 and re['code']==0:\n                    SaveValue.TOKEN=re['data']\n                    log.info('保存的token为：{0}'.format(re['data']))\n            except Exception as e:\n                log.debug('保存token失败：{0}'.format(e))\n                raise e\n            actually_code=re['code']\n            try:\n                assert param['excepted_code']==actually_code\n            except Exception as e:\n                log.debug('未通过用例为:{0}；未通过原因为：{1}'.format(param['title'],re))\n>               raise e\n\ntestcases\\test_case.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcases.test_case.TestCases object at 0x000001DE4E08FC18>\nparam = {'excepted_code': 0, 'header': \"{'language':'zh-CN'}\", 'id': 4, 'method': 'post', ...}\n\n    @allure.story('接口测试')\n    def test_case(self,param):\n        with allure.step(param['title']):\n            #将上一个接口的出参传递到下一个接口\n            #传递ticket\n            if  SaveValue.TICKET !='':\n                reg.regular('TICKET',SaveValue.TICKET,param['param'])\n            #传递token到header\n            if  SaveValue.TOKEN !='':\n                reg.regular('TOKEN',SaveValue.TOKEN,param['header'])\n            #发起请求\n            re=Request().httprequest(param['url'],eval(param['param']),param['method'],eval(param['header']))\n            log.info('请求结果为：{0}'.format(re))\n            #保存ticket\n            try:\n                if param['id']==3 and re['code']==0:\n                    SaveValue.TICKET=re['data']['ticket']\n                    log.info('保存的ticket为：{0}'.format(re['data']['ticket']))\n            except Exception as e:\n                log.debug('保存ticket失败：{0}'.format(e))\n                raise e\n            #保存token\n            try:\n                if param['id']==5 and re['code']==0:\n                    SaveValue.TOKEN=re['data']\n                    log.info('保存的token为：{0}'.format(re['data']))\n            except Exception as e:\n                log.debug('保存token失败：{0}'.format(e))\n                raise e\n            actually_code=re['code']\n            try:\n>               assert param['excepted_code']==actually_code\nE               assert 0 == 400069\nE                 -0\nE                 +400069\n\ntestcases\\test_case.py:43: AssertionError"}, "steps": [{"name": "发送登录邮箱验证码", "status": "failed", "statusDetails": {"message": "AssertionError: assert 0 == 400069\n  -0\n  +400069\n", "trace": "  File \"d:\\xiazai\\python\\project\\pyauto_apitest\\testcases\\test_case.py\", line 46, in test_case\n    raise e\n  File \"d:\\xiazai\\python\\project\\pyauto_apitest\\testcases\\test_case.py\", line 43, in test_case\n    assert param['excepted_code']==actually_code\n"}, "start": 1579515172004, "stop": 1579515172010}], "parameters": [{"name": "param", "value": "{'id': 4, 'title': '发送登录邮箱验证码', 'module': 'login', 'method': 'post', 'header': \"{'language':'zh-CN'}\", 'url': 'http://web.panda-inner.co/api/user/sendLoginEmail', 'param': \"{'ticket':'TICKET'}\", 'excepted_code': 0}"}], "start": 1579515172004, "stop": 1579515172011, "uuid": "a9e4c193-3232-48c4-8c19-1f2fbf6729d7", "historyId": "ebbc41018091edaef3e7f9eeeafe6a4d", "testCaseId": "212f4c207e3aa5cea05ced55444bc5b1", "fullName": "testcases.test_case.TestCases#test_case", "labels": [{"name": "feature", "value": "panda的接口测试报告"}, {"name": "story", "value": "接口测试"}, {"name": "tag", "value": "flyback"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_case"}, {"name": "subSuite", "value": "TestCases"}, {"name": "host", "value": "PC-20190814RYRX"}, {"name": "thread", "value": "11160-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_case"}]}