{"name": "test_case[param2]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 0 == 400000\n  -0\n  +400000", "trace": "self = <testcases.test_case.TestCases object at 0x000002EA7260CC18>\nparam = {'excepted_code': 0, 'header': \"{'language':'zh-CN'}\", 'id': 5, 'method': 'post', ...}\n\n    @allure.story('接口测试')\n    def test_case(self,param):\n        with allure.step(param['title']):\n            #将上一个接口的出参传递到下一个接口\n            #传递ticket\n            if  SaveValue.TICKET !='':\n                param['param'].replace('TICKETS',SaveValue.TICKET)\n            #传递token到header\n            if  SaveValue.TOKEN !='':\n                param['param'].replace('TOKENS',SaveValue.TICKET)\n            #发起请求\n            log.info('请求参数为：{0}'.format(param))\n            re=Request().httprequest(param['url'],eval(param['param']),param['method'],eval(param['header']))\n            log.info('请求结果为：{0}'.format(re))\n            #保存ticket\n            try:\n                if param['id']==3 and re['code']==0:\n                    SaveValue.TICKET=re['data']['ticket']\n                    log.info('保存的ticket为：{0}'.format(SaveValue.TICKET))\n            except Exception as e:\n                log.debug('保存ticket失败：{0}'.format(e))\n                raise e\n            #保存token\n            try:\n                if param['id']==5 and re['code']==0:\n                    SaveValue.TOKEN=re['data']\n                    log.info('保存的token为：{0}'.format(re['data']))\n            except Exception as e:\n                log.debug('保存token失败：{0}'.format(e))\n                raise e\n            actually_code=re['code']\n            try:\n                assert param['excepted_code']==actually_code\n            except Exception as e:\n                log.debug('未通过用例为:{0}；未通过原因为：{1}'.format(param['title'],re))\n>               raise e\n\ntestcases\\test_case.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcases.test_case.TestCases object at 0x000002EA7260CC18>\nparam = {'excepted_code': 0, 'header': \"{'language':'zh-CN'}\", 'id': 5, 'method': 'post', ...}\n\n    @allure.story('接口测试')\n    def test_case(self,param):\n        with allure.step(param['title']):\n            #将上一个接口的出参传递到下一个接口\n            #传递ticket\n            if  SaveValue.TICKET !='':\n                param['param'].replace('TICKETS',SaveValue.TICKET)\n            #传递token到header\n            if  SaveValue.TOKEN !='':\n                param['param'].replace('TOKENS',SaveValue.TICKET)\n            #发起请求\n            log.info('请求参数为：{0}'.format(param))\n            re=Request().httprequest(param['url'],eval(param['param']),param['method'],eval(param['header']))\n            log.info('请求结果为：{0}'.format(re))\n            #保存ticket\n            try:\n                if param['id']==3 and re['code']==0:\n                    SaveValue.TICKET=re['data']['ticket']\n                    log.info('保存的ticket为：{0}'.format(SaveValue.TICKET))\n            except Exception as e:\n                log.debug('保存ticket失败：{0}'.format(e))\n                raise e\n            #保存token\n            try:\n                if param['id']==5 and re['code']==0:\n                    SaveValue.TOKEN=re['data']\n                    log.info('保存的token为：{0}'.format(re['data']))\n            except Exception as e:\n                log.debug('保存token失败：{0}'.format(e))\n                raise e\n            actually_code=re['code']\n            try:\n>               assert param['excepted_code']==actually_code\nE               assert 0 == 400000\nE                 -0\nE                 +400000\n\ntestcases\\test_case.py:44: AssertionError"}, "steps": [{"name": "通过临时登录换取token", "status": "failed", "statusDetails": {"message": "AssertionError: assert 0 == 400000\n  -0\n  +400000\n", "trace": "  File \"d:\\xiazai\\python\\project\\pyauto_apitest\\testcases\\test_case.py\", line 47, in test_case\n    raise e\n  File \"d:\\xiazai\\python\\project\\pyauto_apitest\\testcases\\test_case.py\", line 44, in test_case\n    assert param['excepted_code']==actually_code\n"}, "start": 1579570936721, "stop": 1579570936727}], "parameters": [{"name": "param", "value": "{'id': 5, 'title': '通过临时登录换取token', 'module': 'login', 'method': 'post', 'header': \"{'language':'zh-CN'}\", 'url': 'http://web.panda-inner.co/api/user/getLoginToken', 'param': \"{ 'ticket':'TICKETS', 'code':123456}\", 'excepted_code': 0}"}], "start": 1579570936721, "stop": 1579570936727, "uuid": "8c488faf-9ead-4ce7-ae1d-4549178b8bdc", "historyId": "e9390b821429231e298b34c86cc8e0b5", "testCaseId": "212f4c207e3aa5cea05ced55444bc5b1", "fullName": "testcases.test_case.TestCases#test_case", "labels": [{"name": "feature", "value": "panda的接口测试报告"}, {"name": "story", "value": "接口测试"}, {"name": "tag", "value": "flyback"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_case"}, {"name": "subSuite", "value": "TestCases"}, {"name": "host", "value": "PC-20190814RYRX"}, {"name": "thread", "value": "14752-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_case"}]}